@page "/campaingslist"

@inject AppState AppState
@inject NavigationManager NavigationManager
@using GloomhavenCompanion.ViewModels

<PageTitle>Liste des équipes</PageTitle>

@if (AppState.Campaigns == null || AppState.Campaigns.Count == 0)
{
	<MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center">
		<MudItem>
			<MudText Align="Align.Center">Aucun groupe de héros n'a encore répondu à l'appel…</MudText>
			<MudButton Class="my-2" Variant="Variant.Filled" Size="Size.Large" OnClick="() => CreateNewCampaignNavigate()">Soyez les premiers!</MudButton>
		</MudItem>
	</MudGrid>

}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Nom de la compagnie</th>
				<th>Aventuriers</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var team in AppState.Campaigns)
			{
				<tr>
					<td>@team.CompanyName</td>
					<td>
						@if (team.Players != null && team.Players.Any())
						{
							<table class="table">
								<thead>
									<tr>
										<th>Nom</th>
										<th>XP</th>
										<th>PO</th>
										<th>HP</th>
										<th>Max HP</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var player in team.Players)
									{
										<tr>
											<td>@player.Name</td>
											<td>@player.Xp</td>
											<td>@player.Coins</td>
											<td>@player.HealthPoints</td>
											<td>@player.HealthPointsMax</td>
										</tr>
									}
								</tbody>
							</table>
						}
						else
						{
							<p>Pas de joueurs</p>
						}
					</td>
					<td>
						<button class="btn btn-primary" @onclick="() => SetCurrentTeamAndNavigate(team)">Jouer</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {

	protected override void OnInitialized()
	{
		AppState.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		AppState.OnChange -= StateHasChanged; // Désabonner pour éviter les fuites de mémoire
	}


	protected override async Task OnInitializedAsync()
	{
		await AppState.LoadCampaignsAsync();
	}

	private void RefreshTeamsList()
	{
		StateHasChanged();
	}

	private void SetCurrentTeamAndNavigate(CampainViewModel ChoseCampaign)
	{
		AppState.CurrentCampaign = ChoseCampaign;
		NavigationManager.NavigateTo("/scenarios");
	}

	private void CreateNewCampaignNavigate()
	{
		NavigationManager.NavigateTo("/create-campaign");
	}
}
