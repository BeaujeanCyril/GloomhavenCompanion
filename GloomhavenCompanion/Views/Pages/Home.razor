@page "/"
@using MudBlazor
@inject IJSRuntime JS
@using GloomhavenCompanion.ViewModels
@inject AppState AppState
<MudThemeProvider IsDarkMode="@_isDarkMode" Theme="MyCustomTheme" DefaultScrollbar="true" />

<PageTitle>Home</PageTitle>

<MudGrid Justify="Justify.Center">
  <MudItem xs="12" sm="6" md="4">
    <MudButton Color="Color.Dark" Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.PictureAsPdf" OnClick="OpenPdf">
      Règles
    </MudButton>
  </MudItem>


  <MudItem xs="12">
    <MudDivider />
  </MudItem>  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.AddCircle" OnClick="@(() => NavigateToCreateTeam())">
      Nouvelle partie
    </MudButton>
  </MudItem>
  @if (AppState.CurrentTeam != null)
  {
    <MudItem xs="12" sm="6" md="4">
      <MudButton Class="my-button" Color="Color.Info" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.VideogameAsset" OnClick="@(() => NavigateToResumeGame())">
        Partie en cours
      </MudButton>
    </MudItem>
  }

  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.VideogameAsset" OnClick="@(()=>NavigateToTeamsList())">
     Charger une partie
    </MudButton>
  </MudItem>
</MudGrid>

<style>
  .my-button {
    width: 100%;
    height: 80px; /* Ajuster la hauteur pour le confort tactile */
    font-size: 1.5rem; /* Augmenter la taille du texte */
  }
</style>

@code {
  [Inject] NavigationManager Navigation { get; set; }

  private void NavigateToCreateTeam()
  {
    Navigation.NavigateTo("create-team");
  }

  private void NavigateToTeamsList()
  {
    Navigation.NavigateTo("teamslist");
  }

  private void NavigateToResumeGame()
  {
    Navigation.NavigateTo("game");
  }

  private void OpenPdf()
  {
    var pdfPath = "/img/Books/ca-gloomhaven-regle.pdf";
    JS.InvokeVoidAsync("open", pdfPath, "_blank");
  }

  private bool _isDarkMode = false; // True pour le mode sombre, false pour le mode clair.
  private bool showPopup = false;


  private void ToggleDarkMode()
  {
    _isDarkMode = !_isDarkMode;
    InvokeAsync(StateHasChanged);
  }

  private readonly MudTheme MyCustomTheme = new MudTheme()
    {
      PaletteLight = new PaletteLight()
      {
        Primary = Colors.Blue.Default,
        Secondary = Colors.Green.Accent4,
        AppbarBackground = Colors.Red.Default,
      },
      PaletteDark = new PaletteDark()
      {
        Primary = Colors.Blue.Lighten1,
        AppbarBackground = Colors.Red.Darken1
      },

      LayoutProperties = new LayoutProperties()
      {
        DrawerWidthLeft = "260px",
        DrawerWidthRight = "300px"
      }
    };
}