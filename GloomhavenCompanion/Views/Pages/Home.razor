@page "/"
@using MudBlazor
@inject IJSRuntime JS
@using GloomhavenCompanion.ViewModels
@inject AppState AppState


<MudThemeProvider IsDarkMode="@_isDarkMode" DefaultScrollbar="true" />
<PageTitle>Home</PageTitle>

<MudGrid>
  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.PictureAsPdf" OnClick="OpenPdf">
      Règles
    </MudButton>
  </MudItem>
  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.DarkMode" OnClick="@ToggleDarkMode">
      Dark Mode
    </MudButton>
  </MudItem>

  <MudItem xs="12">
    <MudDivider />
  </MudItem>  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.AddCircle" OnClick="@(() => NavigateToCreateTeam())">
      Nouvelle partie
    </MudButton>
  </MudItem>
  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.VideogameAsset" OnClick="@(() => NavigateToResumeGame())">
      Partie en cours
    </MudButton>
  </MudItem>
  <MudItem xs="12" sm="6" md="4">
    <MudButton Class="my-button" Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.QueryStats" OnClick="TogglePopup">
      Stats
    </MudButton>
  </MudItem>
</MudGrid>




<MudPopover Open="@showPopup">
  <MudPaper Class="p-4">
    <MudGrid>
      @foreach (var round in AppState.CurrentGame.Rounds)
      {
        <MudItem xs="12">
          Round @round.RoundNumber: @round.DateTime
        </MudItem>
      }
    </MudGrid>
  </MudPaper>
</MudPopover>

<style>
  .my-button {
    width: 100%;
    height: 80px; /* Ajuster la hauteur pour le confort tactile */
    font-size: 1.5rem; /* Augmenter la taille du texte */
  }
</style>

@code {
  [Inject] NavigationManager Navigation { get; set; }

  private void NavigateToCreateTeam()
  {
    Navigation.NavigateTo("create-team");
  }

  
  private void NavigateToResumeGame()
  {
    Navigation.NavigateTo("game");
  }


  private bool showPopup = false;

  private void TogglePopup()
  {
    showPopup = !showPopup;
  }
  private bool _isDarkMode = false;

  private void OpenPdf()
  {
    var pdfPath = "/img/Books/ca-gloomhaven-regle.pdf";
    JS.InvokeVoidAsync("open", pdfPath, "_blank");
  }

  private void ToggleDarkMode()
  {
    _isDarkMode = !_isDarkMode;
    InvokeAsync(StateHasChanged);
  }
}
