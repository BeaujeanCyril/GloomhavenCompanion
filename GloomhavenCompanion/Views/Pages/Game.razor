@page "/game/{scenarioId:int}"
@rendermode InteractiveServer
@inject AppState AppState

<PageTitle>Jeu - Scénario @AppState.CurrentScenario?.Name</PageTitle>
<MudGrid Style="background-color:gray;">
	<MudGrid Class="mt-sm-1 d-flex justify-content-between" Style="margin-left: 6px; margin-right:10px">
		<MudItem xs="12" md="2">
			<MudPaper Class="p-4 mb-2">
				<RoundComponent Round="@AppState.CurrentGame.CurrentRound()" OnNextRound="NextRound" />
			</MudPaper>
		</MudItem>
		<MudItem xs="12" md="10" Class="d-flex justify-content-end">
			<MudPaper Class="p-4 mb-2">
				<ElementComponent OnUseElement="@((id) => UseElement(id))" OnSetElementStrong="@((id) => SetElementStrong(id))" />
			</MudPaper>
		</MudItem>
	</MudGrid>

	<MudGrid Style="margin-left: 22px; margin-top: 1px; margin-right:10px;">
		<MudItem md="3">
			@foreach (var deck in AppState.Decks)
			{
				<DeckComponent DeckName=@deck.Name />
			}
		</MudItem>
		@if (AppState.CurrentCampaign != null && AppState.CurrentCampaign.Players.Count > 0)
		{
			<MudItem md="9">
				<MudPaper Class="p-4">
					<MudGrid>
						@foreach (var player in AppState.CurrentCampaign.Players)
						{
							<MudItem xs="6" sm="6" md="6" lg="6" Style="display: flex; ">
								<PlayerComponent Player=@player />
							</MudItem>
						}
					</MudGrid>
				</MudPaper>
			</MudItem>
		}
	</MudGrid>
			<MudItem md="1">
			<MudPaper>
				<MudButton Class="my-button" Size="Size.Large" StartIcon="@Icons.Material.Filled.QueryStats" OnClick="TogglePopup" />
			</MudPaper>
		</MudItem>
</MudGrid>

<MudPopover Open="@showPopup">
	<MudPaper Class="p-4">
		<MudGrid>
			@foreach (var round in AppState.CurrentGame.Rounds)
			{
				<MudItem xs="12">
					Round @round.RoundNumber: @round.DateTime
				</MudItem>
			}
		</MudGrid>
	</MudPaper>
</MudPopover>