@using GloomhavenCompanion.ViewModels
@inject AppState AppState

<div style="position: relative; display: inline-block; transform-origin: top left;">
	<!-- Boutons HP + et HP - sur une ligne -->
	<div style="position: absolute; top: 20%; left: 6%; color: whitesmoke; display: flex; flex-direction:column; gap: 30px; z-index: 2;">
		<MudButton OnClick="IncreaseHP" Size="Size.Large" Color="Color.Dark" Style="width: 40px; height: 30px; font-size: 50px;">+</MudButton>
		<MudButton OnClick="DecreaseHP" Size="Size.Large" Color="Color.Dark" Style="width: 40px; height: 30px; font-size: 50px;">-</MudButton>
	</div>

	<!-- Nom du joueur, avec pointer-events: none pour que ce div ne bloque pas les clics -->
	<div style="position: absolute; top: 20%; left: 4%; font-size: 16px; color: whitesmoke; font-weight: bold; width: 300px; height: 30px; text-align: center; line-height: 30px; border-radius: 8px; padding: 0; pointer-events: none;">
		@Player.Name (@Player.HealthPointsMax HP Max)
	</div>

	<img src="img\General\Dials.png" alt="Description de l'image" />

	<div style="position: absolute; top: 40%; left: 34%; font-size: 20px; background-color: black; color: whitesmoke; font-weight: bold; width: 40px; height: 30px; text-align: center; line-height: 30px; border-radius: 8px; padding: 0;">
		@Player.HealthPoints
	</div>

	<div style="position: absolute; top: 40%; left: 54%; font-size: 20px; background-color: black; color: whitesmoke; font-weight: bold; width: 40px; height: 30px; text-align: center; line-height: 30px; border-radius: 8px; padding: 0;">
		@Player.Xp
	</div>

	<div style="position: absolute; top: 58%; left: 43%; font-size: 20px; color: whitesmoke; font-weight: bold; width: 55px; height: 30px; text-align: center; line-height: 30px; border-radius: 8px; padding: 0;">
		<img src="img\General\gh-coin-1.png" alt="Description de l'image" />

	</div>

	<!-- Boutons Coin + et - sur une ligne -->

	<div style="position: absolute; top: 65%; left: 28%; color: whitesmoke; display: flex; flex-direction:row; gap: 30px; z-index: 2;">
		<MudButton OnClick="DecreaseCoin" Size="Size.Large" Color="Color.Dark" Style="width: 40px; height: 30px; font-size: 50px;">-</MudButton>
		<MudButton OnClick="IncreaseCoin" Size="Size.Large" Color="Color.Dark" Style="width: 40px; height: 30px; font-size: 50px;">+</MudButton>

	</div>

	<div style="position: absolute; top: 67%; left: 47%; font-size: 20px; background-color: black; color: whitesmoke; font-weight: bold; width: 30px; height: 25px; text-align: center; line-height: 23px; border-radius: 8px; padding: 0;">
		@Player.Coins
	</div>

	<!-- Boutons XP + et XP - sur une ligne -->
	<div style="position: absolute; top: 20%; left: 76%; color: whitesmoke; display: flex; flex-direction:column; gap: 30px; z-index: 2;">
		<MudButton OnClick="IncreaseXP" Size="Size.Large" Color="Color.Secondary" Style="width: 40px; height: 30px; font-size: 50px;">+</MudButton>
		<MudButton OnClick="DecreaseXP" Size="Size.Large" Color="Color.Secondary" Style="width: 40px; height: 30px; font-size: 50px;">-</MudButton>
	</div>
</div>



@code {
	[Parameter] public PlayerViewModel Player { get; set; }

	[Parameter] public EventCallback OnPlayerUpdated { get; set; }

	private void OnGoldChanged(int newValue)
	{
		Player.Coins = newValue;
		AppState.UpdatePlayer(Player);
		OnPlayerUpdated.InvokeAsync();
	}

	// Méthodes pour augmenter et diminuer les HP
	private void IncreaseHP()
	{
		if (Player.HealthPoints < Player.HealthPointsMax)
		{
			Player.HealthPoints++;
			AppState.UpdatePlayer(Player);
			OnPlayerUpdated.InvokeAsync();
		}
	}

	private void DecreaseCoin()
	{
		if(Player.Coins > 0)
		{
			Player.Coins--;
			AppState.UpdatePlayer(Player);
			OnPlayerUpdated.InvokeAsync();
		}
	}

	private void IncreaseCoin()
	{

			Player.Coins++;
			AppState.UpdatePlayer(Player);
			OnPlayerUpdated.InvokeAsync();
		
	}

	private void DecreaseHP()
	{
		if (Player.HealthPoints > 0)
		{
			Player.HealthPoints--;
			AppState.UpdatePlayer(Player);
			OnPlayerUpdated.InvokeAsync();
		}
	}

	// Méthodes pour augmenter et diminuer les XP
	private void IncreaseXP()
	{
		Player.Xp++;
		AppState.UpdatePlayer(Player);
		OnPlayerUpdated.InvokeAsync();
	}

	private void DecreaseXP()
	{
		if (Player.Xp > 0)
		{
			Player.Xp--;
			AppState.UpdatePlayer(Player);
			OnPlayerUpdated.InvokeAsync();
		}
	}
}
