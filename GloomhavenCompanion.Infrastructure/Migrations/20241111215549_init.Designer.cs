// <auto-generated />
using System;
using GloomhavenCompanion.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GloomhavenCompanion.Infrastructure.Migrations
{
    [DbContext(typeof(GloomhavenCompanionDbContext))]
    [Migration("20241111215549_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeckId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("NeedShuffle")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsShowingBackCard")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShuffled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Effect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Effects");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Elements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "img/Elements/FirePicture.png",
                            Name = "Feu",
                            State = 0
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "img/Elements/DarknessPicture.png",
                            Name = "Ténèbre",
                            State = 0
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "img/Elements/EarthPicture.png",
                            Name = "Terre",
                            State = 0
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "img/Elements/WindPicture.png",
                            Name = "Vent",
                            State = 0
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "img/Elements/LightPicture.png",
                            Name = "Lumière",
                            State = 0
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "img/Elements/FrostPicture.png",
                            Name = "Givre",
                            State = 0
                        });
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeStarted")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MonsterDeckId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonsterDeckId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("Coins")
                        .HasColumnType("int");

                    b.Property<int>("DeckId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("HealthPointsMax")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Xp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("DeckId");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GameId");

                    b.ToTable("Scenarios");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Card", b =>
                {
                    b.HasOne("GloomhavenCompanion.Data.Model.Deck", "Deck")
                        .WithMany("CardsList")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Effect", b =>
                {
                    b.HasOne("GloomhavenCompanion.Data.Model.Player", null)
                        .WithMany("Effects")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Game", b =>
                {
                    b.HasOne("GloomhavenCompanion.Data.Model.Deck", "MonsterDeck")
                        .WithMany()
                        .HasForeignKey("MonsterDeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonsterDeck");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Player", b =>
                {
                    b.HasOne("GloomhavenCompanion.Data.Model.Campaign", "Campaign")
                        .WithMany("Players")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloomhavenCompanion.Data.Model.Deck", "Deck")
                        .WithMany()
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloomhavenCompanion.Data.Model.Game", null)
                        .WithMany("Players")
                        .HasForeignKey("GameId");

                    b.Navigation("Campaign");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Round", b =>
                {
                    b.HasOne("GloomhavenCompanion.Data.Model.Game", null)
                        .WithMany("Rounds")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Scenario", b =>
                {
                    b.HasOne("GloomhavenCompanion.Data.Model.Campaign", null)
                        .WithMany("Scenarios")
                        .HasForeignKey("CampaignId");

                    b.HasOne("GloomhavenCompanion.Data.Model.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Campaign", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Scenarios");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Deck", b =>
                {
                    b.Navigation("CardsList");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Game", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("GloomhavenCompanion.Data.Model.Player", b =>
                {
                    b.Navigation("Effects");
                });
#pragma warning restore 612, 618
        }
    }
}
